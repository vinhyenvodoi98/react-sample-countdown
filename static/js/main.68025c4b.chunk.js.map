{"version":3,"sources":["../../dist/clock-icon~bjyXqlIY.png","../../src/components/Clock/index.js","../../src/index.js","App.js","index.js"],"names":["module","exports","Clock","text","time","onFinish","useState","seconds","setSeconds","timer","setTimer","useEffect","temp","parseInt","main","setTimeout","clearInterval","interval","setInterval","console","className","styles","src","alt","ExampleComponent","App","alert","ReactDOM","render","document","getElementById"],"mappings":"0IAAAA,EAAOC,QAAU,IAA0B,iD,uMCK5B,SAASC,EAAM,GAA0B,IAAxBC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,SAAY,EACxBC,mBADwB,gBAC/CC,EAD+C,KACtCC,EADsC,OAE5BF,mBAF4B,gBAE/CG,EAF+C,KAExCC,EAFwC,KAsDtD,OA7CAC,qBAAU,YACK,WACX,KAAU,CACR,IAAIC,EAAOR,QAAX,KAEES,SAASD,EAATC,OACAA,SAASD,KADTC,KAEAA,SAASD,EAATC,IAFAA,GAGAA,SAASD,KAHTC,KAIAA,SAASD,EAATC,IAJAA,GAKAA,SAASD,KANX,IAQEJ,GARF,GAUEA,EACEK,cAASD,MACPC,SADFA,GACWD,MACTC,SAASD,EAHbJ,UAMGA,MAETM,KACC,CAvBHH,IAyBAA,qBAAU,YACK,WACX,QAAIJ,OAAyBA,GAA7B,EACMA,GAAJ,GACEQ,YAAW,WACTV,MADF,GAGFW,qBACK,CACL,IAAIC,EAAWC,aAAY,WACzBV,GAAW,mBAAaD,EAAb,OADb,KAGAG,KACAM,kBAIJF,KACC,CAlBHH,IAqBE,8BACGJ,MACCY,cADDZ,kCAGC,6BACE,yBAAKa,UAAWC,GACd,4BADF,GAEE,yBAAKD,UAAWC,EAAcC,IAA9B,IAA6CC,IAAI,SAGnD,6BAXR,2C,ICvDWC,EAAmB,SAAC,GAA6B,IAA3BrB,EAA2B,EAA3BA,KAAMC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SAC7C,OACE,yBAAKe,UAAWC,GACd,qBAAOlB,KAAP,EAAmBC,KAAnB,EAA+BC,SAAUA,MCahCoB,G,MAfH,WAMV,OACE,kBAAC,EAAD,CACEtB,KAAK,mCACLC,KAAK,WACLC,SATa,WAEfqB,MAAM,qBCFVC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.68025c4b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/clock-icon~bjyXqlIY.d4a0f2ce.png\";","import React, { useState, useEffect, initialState } from 'react'\nimport clockImg from '/../../asset/clock-icon.png'\n\nimport styles from './index.module.css'\n\nexport default function Clock({ text, time, onFinish }) {\n  const [seconds, setSeconds] = useState(initialState)\n  const [timer, setTimer] = useState(initialState)\n\n  const second = 1000,\n    minute = second * 60,\n    hour = minute * 60,\n    day = hour * 24\n\n  useEffect(() => {\n    const main = () => {\n      if (time) {\n        var temp = time.split(':')\n        if (\n          parseInt(temp[0]) < 0 ||\n          parseInt(temp[0] > 24) ||\n          parseInt(temp[1]) < 0 ||\n          parseInt(temp[1] > 60) ||\n          parseInt(temp[2]) < 0 ||\n          parseInt(temp[2] > 60)\n        )\n          setSeconds(-5)\n        else {\n          setSeconds(\n            parseInt(temp[0] * 3600) +\n              parseInt(temp[1] * 60) +\n              parseInt(temp[2])\n          )\n        }\n      } else setSeconds(-5)\n    }\n    main()\n  }, [time])\n\n  useEffect(() => {\n    const main = () => {\n      if (seconds === undefined || seconds <= 0) {\n        if (seconds <= 0)\n          setTimeout(() => {\n            onFinish()\n          }, 1)\n        clearInterval(timer)\n      } else {\n        let interval = setInterval(() => {\n          setSeconds((seconds) => seconds - 1)\n        }, 1000)\n        setTimer(interval)\n        clearInterval(timer)\n      }\n    }\n\n    main()\n  }, [seconds])\n\n  return (\n    <div>\n      {seconds === -5 ? (\n        console.error('Incorrect time format entered.')\n      ) : (\n        <div>\n          <div className={styles.clock_box}>\n            <h1>{text}</h1>\n            <img className={styles.clock} src={clockImg} alt='alt' />\n          </div>\n\n          <p>{seconds} seconds have elapsed since mounting.</p>\n        </div>\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport styles from './styles.module.css'\nimport Clock from './components/Clock'\n\nexport const ExampleComponent = ({ text, time, onFinish }) => {\n  return (\n    <div className={styles.test}>\n      <Clock text={text} time={time} onFinish={onFinish} />\n    </div>\n  )\n}\n","import React from 'react'\n\nimport { ExampleComponent } from 'react-sample-countdown'\nimport 'react-sample-countdown/dist/index.css'\n\nconst App = () => {\n  const onFinish = () => {\n    // console.log('finished!')\n    alert('Finished !!!')\n  }\n\n  return (\n    <ExampleComponent\n      text='Countdown to answer the question'\n      time='00:00:15'\n      onFinish={onFinish}\n    />\n  )\n}\n\nexport default App\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}